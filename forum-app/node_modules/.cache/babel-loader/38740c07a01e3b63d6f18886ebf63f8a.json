{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionDetailPage.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BackButton from '../components/UI/BackButton/BackButton';\nimport AnswerList from '../components/QuestionDetail/AnswerList/AnswerList';\nimport QuestionBox from '../components/QuestionDetail/QuestionBox/QuestionBox';\nimport AddAnswerForm from '../components/UI/Forms/AddAnswerForm';\nimport AuthContext from '../context/AuthContext';\nimport './QuestionDetailPage.css';\nimport { findAllByQuestionId, createAnswer } from '../services/Answer';\n\nclass QuestionDetailPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchAnwersByQuestionId = async questionId => {\n      const answers = await findAllByQuestionId(questionId);\n    };\n\n    this.saveAnswer = async (newAnswer, username, questionId) => {};\n\n    this.onNewAnswerChange = event => {\n      this.setState({\n        newAnswer: event.target.value\n      });\n    };\n\n    this.onNewAnswerSubmit = (event, username, questionId) => {\n      if (window.confirm('Tem certeza que deseja enviar resposta?')) {\n        this.saveAnswer(this.state.newAnswer, username, questionId);\n      }\n\n      event.preventDefault();\n    };\n\n    this.obtainAnswersCount = selectedQuestion => {\n      if (selectedQuestion.answers === [] || selectedQuestion.answers === undefined) {\n        return 0;\n      }\n\n      return selectedQuestion.answers.length;\n    };\n\n    this.obtainAnswerList = selectedQuestion => {\n      if (selectedQuestion.answers === [] || selectedQuestion.answers === undefined) {\n        return [];\n      }\n\n      return selectedQuestion.answers;\n    };\n\n    this.state = {\n      newAnswer: ''\n    };\n  }\n\n  render() {\n    const {\n      selectedQuestion\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"QuestionDetailPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      clicked: () => this.props.backButtonClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(QuestionBox, {\n      question: selectedQuestion.text,\n      user: selectedQuestion.user,\n      answers: this.obtainAnswersCount(selectedQuestion),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AnswerList, {\n      answerList: this.obtainAnswerList(selectedQuestion),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, context => /*#__PURE__*/React.createElement(AddAnswerForm, {\n      questionId: selectedQuestion.id,\n      username: context.username,\n      newAnswer: this.state.newAnswer,\n      onNewAnswerChange: this.onNewAnswerChange,\n      onNewAnswerSubmit: this.onNewAnswerSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 33\n      }\n    })));\n  }\n\n}\n\nQuestionDetailPage.defaultProps = {\n  selectedQuestion: {\n    id: '',\n    text: '',\n    user: '',\n    creationDate: '',\n    answers: []\n  }\n};\nQuestionDetailPage.propTypes = {\n  backButtonClicked: PropTypes.func,\n  selectedQuestion: PropTypes.object,\n  newAnswer: PropTypes.string,\n  onNewAnswerChange: PropTypes.func,\n  onNewAnswerSubmit: PropTypes.func\n};\nexport default QuestionDetailPage;","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionDetailPage.js"],"names":["React","PureComponent","PropTypes","BackButton","AnswerList","QuestionBox","AddAnswerForm","AuthContext","findAllByQuestionId","createAnswer","QuestionDetailPage","constructor","props","fetchAnwersByQuestionId","questionId","answers","saveAnswer","newAnswer","username","onNewAnswerChange","event","setState","target","value","onNewAnswerSubmit","window","confirm","state","preventDefault","obtainAnswersCount","selectedQuestion","undefined","length","obtainAnswerList","render","backButtonClicked","text","user","context","id","defaultProps","creationDate","propTypes","func","object","string"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BackButton from '../components/UI/BackButton/BackButton';\nimport AnswerList from '../components/QuestionDetail/AnswerList/AnswerList';\nimport QuestionBox from '../components/QuestionDetail/QuestionBox/QuestionBox';\nimport AddAnswerForm from '../components/UI/Forms/AddAnswerForm';\nimport AuthContext from '../context/AuthContext';\nimport './QuestionDetailPage.css';\n\nimport { findAllByQuestionId, createAnswer } from '../services/Answer';\n\nclass QuestionDetailPage extends PureComponent{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            newAnswer: ''\n        }\n\n    }\n\n\n    fetchAnwersByQuestionId = async (questionId) => {\n        const answers = await findAllByQuestionId(questionId);\n\n    };\n\n    saveAnswer = async (newAnswer, username, questionId) => {\n\n\t}\n\n\tonNewAnswerChange = (event) =>{\n\t\tthis.setState({newAnswer: event.target.value});\n\t}\n\n\tonNewAnswerSubmit = (event, username, questionId) => {\n\t\tif (window.confirm('Tem certeza que deseja enviar resposta?')){\n\t\t\tthis.saveAnswer(this.state.newAnswer, username, questionId)\n\t\t}\n\t\tevent.preventDefault();\n\t\t\n    };\n\n\n    //subistituir loadash\n    obtainAnswersCount = (selectedQuestion) => {\n        if(selectedQuestion.answers === [] || selectedQuestion.answers === undefined){\n            return 0;\n        }\n        return selectedQuestion.answers.length;\n    };\n\n    obtainAnswerList = (selectedQuestion) => {\n        if(selectedQuestion.answers === [] || selectedQuestion.answers === undefined){\n            return [];\n        }\n        return selectedQuestion.answers;\n    };\n \n\n    render(){\n        const { selectedQuestion } = this.props;\n        return(\n            <div className='QuestionDetailPage'>\n                <BackButton clicked={() => this.props.backButtonClicked()} />\n                <QuestionBox \n                    question={selectedQuestion.text}\n                    user={selectedQuestion.user}\n                    answers={this.obtainAnswersCount(selectedQuestion)} />\n                <AnswerList answerList = {this.obtainAnswerList(selectedQuestion)}/>\n                \n                <AuthContext.Consumer>\n                    {context => <AddAnswerForm \n                        questionId = {selectedQuestion.id}\n                        username={context.username}\n                        newAnswer={this.state.newAnswer}\n                        onNewAnswerChange={this.onNewAnswerChange}\n                        onNewAnswerSubmit={this.onNewAnswerSubmit}/>}\n                </AuthContext.Consumer>\n            </div>\n        );\n    }\n}\n\nQuestionDetailPage.defaultProps = {\n    selectedQuestion: {\n        id: '',\n        text: '',\n        user: '',\n        creationDate: '',\n        answers:[]\n    }\n};\n\nQuestionDetailPage.propTypes = {\n    backButtonClicked : PropTypes.func,\n    selectedQuestion: PropTypes.object,\n    newAnswer: PropTypes.string,\n    onNewAnswerChange: PropTypes.func,\n    onNewAnswerSubmit: PropTypes.func\n};\n\nexport default QuestionDetailPage;\n\n\n"]},"metadata":{},"sourceType":"module"}