{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/forum-app/src/containers/QuestionsPage.js\";\nimport React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\nimport QuestionDetail from '../components/QuestionDetail/QuestionDetail';\nimport './QuestionsPage.css';\n\nclass QuestionsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.onBackButtonClicked = () => {\n      this.setState({\n        selectedQuestionItem: {}\n      });\n      this.setState({\n        viewQuestion: false\n      });\n    };\n\n    this.onQuestionItemSelected = id => {\n      const questionItemSelected = this.state.questions.filter(question => question.id === id);\n      this.setState({\n        selectedQuestionItem: questionItemSelected[0]\n      });\n      this.setState({\n        viewQuestion: true\n      });\n    };\n\n    this.obtainQuestionsSummaryList = questions => {\n      if (questions !== undefined) {\n        const questionsList = [...questions];\n        const questionSummary = questionsList.map(question => {\n          return {\n            questionId: question.id,\n            question: question.text,\n            answers: question.answers.length\n          };\n        }) || [];\n        return questionSummary;\n      }\n\n      return [];\n    };\n\n    this.fetchQuestions = async () => {};\n\n    this.saveQuestions = (question, username) => {\n      console.log(question, username);\n    };\n\n    this.componentDidMount = () => {\n      const newQuestions = [...questionsConst];\n      this.setState({\n        questions: newQuestions\n      });\n    };\n\n    this.state = {\n      username: \"Pedro\",\n      questions: [],\n      selectedQuestionItem: {},\n      viewQuestion: false\n    };\n  }\n\n  render() {\n    const {\n      questions,\n      viewQuestion,\n      selectedQuestionItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"QuestionsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, viewQuestion ? /*#__PURE__*/React.createElement(QuestionDetail, {\n      backButtonClicked: this.onBackButtonClicked,\n      selectedQuestion: selectedQuestionItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(QuestionsSummary, {\n      selectQuestion: this.onQuestionItemSelected,\n      questionsSummaryList: this.obtainQuestionsSummaryList(questions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default QuestionsPage;\nconst questionsConst = [{\n  id: 123,\n  text: \"My question ahuwauwuhau ahahuuahawuoeaeahfoheoeafhheafoaeoaoeihaoiheoahoehioahoheoiaeiohehaiehoihoiaehioeahioeahioeahoieahioaehoiheaioeoihaohiaeehaioohiea\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }, {\n    id: 1235,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }, {\n    id: 1236,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 124,\n  text: \"My question 2\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 125,\n  text: \"My question 3\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer 4\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 126,\n  text: \"My question 5\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}];","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/forum-app/src/containers/QuestionsPage.js"],"names":["React","PureComponent","QuestionsSummary","QuestionDetail","QuestionsPage","constructor","props","onBackButtonClicked","setState","selectedQuestionItem","viewQuestion","onQuestionItemSelected","id","questionItemSelected","state","questions","filter","question","obtainQuestionsSummaryList","undefined","questionsList","questionSummary","map","questionId","text","answers","length","fetchQuestions","saveQuestions","username","console","log","componentDidMount","newQuestions","questionsConst","render","user","creationDate"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\nimport QuestionDetail from '../components/QuestionDetail/QuestionDetail';\nimport './QuestionsPage.css'\n\nclass QuestionsPage extends PureComponent{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\t\t\tusername: \"Pedro\",\n\t\t\tquestions: [],\n\t\t  \tselectedQuestionItem: {},\n\t\t  \tviewQuestion: false\n        };\n      }\n\n\tonBackButtonClicked = () =>{\n\t\tthis.setState({selectedQuestionItem: {} });\n\t\tthis.setState({ viewQuestion: false});\n\t};\n\t  \n\tonQuestionItemSelected = (id)=>{\n\t\tconst questionItemSelected = this.state.questions.filter( question => question.id === id);\n\t\tthis.setState({selectedQuestionItem: questionItemSelected[0]});\n\t\tthis.setState({ viewQuestion: true});\n\t};\n\n\n    obtainQuestionsSummaryList = (questions) => {\n        if(questions !== undefined){\n            const questionsList = [...questions];\n            const questionSummary = questionsList.map( question => {\n                return { questionId: question.id , question: question.text, answers: question.answers.length }\n            }) || [];\n         \n\n            return questionSummary;\n        }\n        return [];\n    };\n\t\n\tfetchQuestions = async () => {\n\n\t};\n\n\tsaveQuestions = (question, username) => {\n\t\tconsole.log(question, username);\n\t};\n \n    componentDidMount = () => {\n        const newQuestions = [...questionsConst];\n        this.setState({ questions : newQuestions})\n    }\n\n    render(){\n        const { questions, viewQuestion , selectedQuestionItem} = this.state;\n        return(\n           <div className='QuestionsPage'>\n\t\t\t   {viewQuestion? \n\t\t\t   <QuestionDetail \n\t\t\t\t\t   backButtonClicked={this.onBackButtonClicked}\n\t\t\t\t\t   selectedQuestion={selectedQuestionItem} /> \n\t\t\t   :  \n\t\t\t   <QuestionsSummary\n\t\t\t   \t\tselectQuestion={this.onQuestionItemSelected} \n                \tquestionsSummaryList={this.obtainQuestionsSummaryList(questions)} /> }\n\t\t\t   \n\t\t\t  \n           </div>\n        );\n    \n    };\n}\n\nexport default QuestionsPage;\n\n\nconst questionsConst = [\n    {\n    id: 123,\n    text: \"My question ahuwauwuhau ahahuuahawuoeaeahfoheoeafhheafoaeoaoeihaoiheoahoehioahoheoiaeiohehaiehoihoiaehioeahioeahioeahoieahioaehoiheaioeoihaohiaeehaioohiea\",\n    user: \"username\",\n    creationDate: \"2020-01-01 12:00:00\",\n    answers: [\n      {\n        id: 1234,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n\t  },\n\t  {\n        id: 1235,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n\t  },\n\t  {\n        id: 1236,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n      }\n    ]\n\t},\n\t{\n\tid: 124,\n\ttext: \"My question 2\",\n\tuser: \"username\",\n\tcreationDate: \"2020-01-01 12:00:00\",\n\tanswers: [\n\t\t{\n\t\tid: 1234,\n\t\ttext: \"My answer\",\n\t\tuser: \"another.username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t}\n\t]\n\t},\n\t{\n\t\tid: 125,\n\t\ttext: \"My question 3\",\n\t\tuser: \"username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\tanswers: [\n\t\t\t{\n\t\t\tid: 1234,\n\t\t\ttext: \"My answer 4\",\n\t\t\tuser: \"another.username\",\n\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t\t}\n\t\t]\n\t},  \n\t{\n\t\tid: 126,\n\t\ttext: \"My question 5\",\n\t\tuser: \"username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\tanswers: [\n\t\t\t{\n\t\t\tid: 1234,\n\t\t\ttext: \"My answer\",\n\t\t\tuser: \"another.username\",\n\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t\t}\n\t\t]\n\t}\n]"]},"metadata":{},"sourceType":"module"}