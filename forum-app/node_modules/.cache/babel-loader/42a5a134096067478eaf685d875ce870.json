{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport const listQuestions = async () => {\n  try {\n    const questions = await axios.get('/question/all', config);\n\n    if (questions.status === 204) {\n      return {\n        questions: [],\n        error: 0\n      };\n    }\n\n    return {\n      questions: questions.data,\n      error: 0\n    };\n  } catch (error) {\n    return {\n      questions: [],\n      error: 1,\n      message: error\n    };\n  }\n};\nexport const createQuestion = async question => {\n  try {\n    const data = await axios.post('/question/save', question, config);\n    return {\n      question: data,\n      error: 0\n    };\n  } catch (error) {\n    return {\n      question: {},\n      error: 1,\n      message: error\n    };\n  }\n};","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/services/Question.js"],"names":["axios","config","listQuestions","questions","get","status","error","data","message","createQuestion","question","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAW;AACpC,MAAI;AACA,UAAMC,SAAS,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BH,MAA3B,CAAxB;;AACA,QAAGE,SAAS,CAACE,MAAV,KAAqB,GAAxB,EAA4B;AACxB,aAAO;AAAEF,QAAAA,SAAS,EAAE,EAAb;AAAiBG,QAAAA,KAAK,EAAE;AAAxB,OAAP;AACH;;AACD,WAAO;AAAEH,MAAAA,SAAS,EAAEA,SAAS,CAACI,IAAvB;AAA6BD,MAAAA,KAAK,EAAE;AAApC,KAAP;AACH,GAND,CAME,OAAOA,KAAP,EAAc;AACZ,WAAO;AAAEH,MAAAA,SAAS,EAAE,EAAb;AAAiBG,MAAAA,KAAK,EAAE,CAAxB;AAA2BE,MAAAA,OAAO,EAAEF;AAApC,KAAP;AACH;AACJ,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAI,MAAMC,QAAN,IAAmB;AAC9C,MAAI;AACA,UAAMH,IAAI,GAAG,MAAMP,KAAK,CAACW,IAAN,CAAW,gBAAX,EAA6BD,QAA7B,EAAuCT,MAAvC,CAAnB;AACA,WAAO;AAAES,MAAAA,QAAQ,EAAEH,IAAZ;AAAkBD,MAAAA,KAAK,EAAE;AAAzB,KAAP;AACH,GAHD,CAGE,OAAOA,KAAP,EAAc;AACZ,WAAO;AAAEI,MAAAA,QAAQ,EAAE,EAAZ;AAAgBJ,MAAAA,KAAK,EAAE,CAAvB;AAA0BE,MAAAA,OAAO,EAAEF;AAAnC,KAAP;AACH;AAEJ,CARM","sourcesContent":["import axios from 'axios';\nimport config from './config';\n\nexport const listQuestions = async () =>{\n    try {\n        const questions = await axios.get('/question/all', config);\n        if(questions.status === 204){\n            return { questions :[], error: 0};\n        }\n        return { questions: questions.data, error: 0} ;\n    } catch (error) {\n        return { questions :[], error: 1, message: error};\n    }\n};\n\nexport const createQuestion =  async(question) => {\n    try {\n        const data = await axios.post('/question/save', question, config);\n        return { question: data, error: 0 }\n    } catch (error) {\n        return { question :{}, error: 1, message: error};\n    }\n   \n};\n\n"]},"metadata":{},"sourceType":"module"}