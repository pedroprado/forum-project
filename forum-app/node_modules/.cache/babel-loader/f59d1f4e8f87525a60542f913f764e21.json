{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport const listQuestions = async () => {\n  try {\n    const response = await axios.get('/question/all', config);\n\n    if (response.status === 200) {\n      return {\n        questions: response.data\n      };\n    }\n\n    if (response.status === 204) {\n      return {\n        questions: []\n      };\n    }\n\n    if (response.status === 400) {\n      return {\n        error: true,\n        message: \"Recurso n達o existe.\"\n      };\n    }\n\n    if (response.status === 500) {\n      return {\n        error: true,\n        message: \"Erro interno do servidor.\"\n      };\n    } else {\n      return {\n        error: true,\n        message: \"Erro desconhecido.\"\n      };\n    }\n  } catch (error) {\n    console.log(error.message);\n    return {\n      error: true,\n      message: error.message\n    };\n  }\n};\nexport const createQuestion = async question => {\n  try {\n    const response = await axios.post('/question/save', question, config);\n\n    if (response.status === 201) {\n      return {\n        question: response.data\n      };\n    }\n\n    if (response.status === 400) {\n      return {\n        error: true,\n        message: \"Recurso n達o existe.\"\n      };\n    }\n\n    if (response.status === 500) {\n      return {\n        error: true,\n        message: \"Erro interno do servidor.\"\n      };\n    } else {\n      return {\n        error: true,\n        message: \"Erro desconhecido.\"\n      };\n    }\n  } catch (error) {\n    return {\n      error: true,\n      message: error\n    };\n  }\n};","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/services/Question.js"],"names":["axios","config","listQuestions","response","get","status","questions","data","error","message","console","log","createQuestion","question","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAW;AACpC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BH,MAA3B,CAAvB;;AACA,QAAGE,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEC,QAAAA,SAAS,EAAEH,QAAQ,CAACI;AAAtB,OAAP;AACH;;AACD,QAAGJ,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAP;AACH;;AACD,QAAGH,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;;AACD,QAAGN,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH,KAFD,MAGI;AACA,aAAO;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;AACJ,GAjBD,CAiBE,OAAOD,KAAP,EAAc;AACZE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,OAAlB;AACA,WAAO;AAAED,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAED,KAAK,CAACC;AAA9B,KAAP;AACH;AACJ,CAtBM;AAwBP,OAAO,MAAMG,cAAc,GAAI,MAAMC,QAAN,IAAmB;AAC9C,MAAI;AACA,UAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAN,CAAW,gBAAX,EAA6BD,QAA7B,EAAuCZ,MAAvC,CAAvB;;AACA,QAAGE,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEQ,QAAAA,QAAQ,EAAEV,QAAQ,CAACI;AAArB,OAAP;AACH;;AACD,QAAGJ,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;;AACD,QAAGN,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH,KAFD,MAGI;AACA,aAAO;AAAED,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;AACJ,GAdD,CAcE,OAAOD,KAAP,EAAc;AACZ,WAAO;AAAEA,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAED;AAAxB,KAAP;AACH;AAEJ,CAnBM","sourcesContent":["import axios from 'axios';\nimport config from './config';\n\nexport const listQuestions = async () =>{\n    try {\n        const response = await axios.get('/question/all', config);\n        if(response.status === 200){\n            return { questions: response.data} ;\n        }\n        if(response.status === 204){\n            return { questions :[]};\n        }\n        if(response.status === 400){\n            return { error: true, message: \"Recurso n達o existe.\"};\n        }\n        if(response.status === 500){\n            return { error: true, message: \"Erro interno do servidor.\"}\n        }\n        else{\n            return { error: true, message: \"Erro desconhecido.\"}\n        }\n    } catch (error) {\n        console.log(error.message)\n        return { error: true, message: error.message};\n    }\n};\n\nexport const createQuestion =  async(question) => {\n    try {\n        const response = await axios.post('/question/save', question, config);\n        if(response.status === 201){\n            return { question: response.data} ;\n        }\n        if(response.status === 400){\n            return { error: true, message: \"Recurso n達o existe.\"};\n        }\n        if(response.status === 500){\n            return { error: true, message: \"Erro interno do servidor.\"}\n        }\n        else{\n            return { error: true, message: \"Erro desconhecido.\"}\n        }\n    } catch (error) {\n        return { error: true, message: error};\n    }\n   \n};\n\n"]},"metadata":{},"sourceType":"module"}