{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionsPage.js\";\nimport React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\nimport QuestionDetailPage from './QuestionDetailPage';\nimport './QuestionsPage.css';\nimport { listQuestions, createQuestion } from '../services/Question';\n\nclass QuestionsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchQuestions = async () => {\n      const questions = await listQuestions();\n      this.setState({\n        questions: [...questions]\n      });\n    };\n\n    this.saveQuestion = async (newQuestion, username) => {\n      const new_question = {\n        text: newQuestion,\n        user: username\n      };\n      await createQuestion(new_question);\n    };\n\n    this.onBackButtonClicked = () => {\n      this.setState({\n        viewQuestionDetail: false\n      });\n    };\n\n    this.onQuestionItemSelected = id => {\n      const questionItemSelected = this.state.questions.filter(question => question.id === id);\n      this.setState({\n        selectedQuestionItem: questionItemSelected[0]\n      });\n      this.setState({\n        viewQuestionDetail: true\n      });\n    };\n\n    this.onNewQuestionChange = event => {\n      this.setState({\n        newQuestion: event.target.value\n      });\n    };\n\n    this.onNewQuestionSubmit = async (event, username) => {\n      event.preventDefault();\n\n      if (window.confirm('Tem certeza que deseja enviar pergunta?')) {\n        await this.saveQuestion(this.state.newQuestion, username);\n        await this.fetchQuestions();\n        this.setState({\n          newQuestion: ''\n        });\n      }\n    };\n\n    this.componentDidUpdate = async (prevProps, prevState) => {\n      if (prevState.viewQuestionDetail !== this.state.viewQuestionDetail) {\n        await this.fetchQuestions();\n      }\n    };\n\n    this.componentDidMount = async () => {\n      await this.fetchQuestions();\n    };\n\n    this.state = {\n      questions: [],\n      selectedQuestionItem: {},\n      viewQuestionDetail: false,\n      newQuestion: ''\n    };\n  }\n\n  render() {\n    const {\n      questions,\n      newQuestion,\n      viewQuestionDetail,\n      selectedQuestionItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"QuestionsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }, viewQuestionDetail ? /*#__PURE__*/React.createElement(QuestionDetailPage, {\n      backButtonClicked: this.onBackButtonClicked,\n      selectedQuestion: selectedQuestionItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(QuestionsSummary, {\n      onQuestionSelected: this.onQuestionItemSelected,\n      newQuestion: newQuestion,\n      onNewQuestionChange: this.onNewQuestionChange,\n      onNewQuestionSubmit: this.onNewQuestionSubmit,\n      questions: questions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default QuestionsPage;","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionsPage.js"],"names":["React","PureComponent","QuestionsSummary","QuestionDetailPage","listQuestions","createQuestion","QuestionsPage","constructor","props","fetchQuestions","questions","setState","saveQuestion","newQuestion","username","new_question","text","user","onBackButtonClicked","viewQuestionDetail","onQuestionItemSelected","id","questionItemSelected","state","filter","question","selectedQuestionItem","onNewQuestionChange","event","target","value","onNewQuestionSubmit","preventDefault","window","confirm","componentDidUpdate","prevProps","prevState","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\nimport QuestionDetailPage from './QuestionDetailPage';\nimport './QuestionsPage.css'\n\nimport { listQuestions, createQuestion } from '../services/Question';\n\n\nclass QuestionsPage extends PureComponent{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\t\t\tquestions: [],\n\t\t  \tselectedQuestionItem: {},\n\t\t\tviewQuestionDetail: false,\n\t\t\tnewQuestion: ''\n        };\n    }\n\n\tfetchQuestions = async () => {\n\t\tconst questions = await listQuestions();\n\t\tthis.setState({ questions: [...questions]});\t\n\t};\n\n\tsaveQuestion = async (newQuestion, username) => {\n\t\tconst new_question = { text: newQuestion, user: username }\n\t\tawait createQuestion(new_question);\n\t}\n\n\tonBackButtonClicked = () =>{\n\t\tthis.setState({ viewQuestionDetail: false});\n\t};\n\t  \n\tonQuestionItemSelected = (id)=>{\n\t\tconst questionItemSelected = this.state.questions.filter( question => question.id === id);\n\t\tthis.setState({ selectedQuestionItem: questionItemSelected[0]});\n\t\tthis.setState({ viewQuestionDetail: true});\n\t};\n\n\tonNewQuestionChange = (event) =>{\n\t\tthis.setState({newQuestion: event.target.value});\n\t}\n\n\tonNewQuestionSubmit = async (event, username) => {\n\t\tevent.preventDefault();\n\t\tif (window.confirm('Tem certeza que deseja enviar pergunta?')){\n\t\t\tawait this.saveQuestion(this.state.newQuestion, username);\n\t\t\tawait this.fetchQuestions();\n\t\t\tthis.setState({ newQuestion: ''});\n\t\t}\n\t};\n\n\tcomponentDidUpdate = async (prevProps, prevState) =>{\n\t\tif(prevState.viewQuestionDetail !== this.state.viewQuestionDetail){\n\t\t\tawait this.fetchQuestions();\n\t\t}\n\t};\n\n    componentDidMount = async () => {\n\t\tawait this.fetchQuestions();\n    }\n\n    render(){\n\t\tconst { questions, newQuestion, viewQuestionDetail , selectedQuestionItem} = this.state;\n        return(\n           <div className='QuestionsPage'>\n\t\t\t   {viewQuestionDetail? \n\t\t\t   <QuestionDetailPage \n\t\t\t\t\tbackButtonClicked={this.onBackButtonClicked}\n\t\t\t\t\tselectedQuestion={selectedQuestionItem} /> \n\t\t\t   :  \n\t\t\t   <QuestionsSummary\n\t\t\t\t\tonQuestionSelected={this.onQuestionItemSelected}\n\t\t\t\t\tnewQuestion={newQuestion} \n\t\t\t\t\tonNewQuestionChange={this.onNewQuestionChange}\n\t\t\t\t\tonNewQuestionSubmit = {this.onNewQuestionSubmit}   \n                \tquestions={questions} /> }\n           </div>\n        );  \n    };\n}\n\nexport default QuestionsPage;"]},"metadata":{},"sourceType":"module"}