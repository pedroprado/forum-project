{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/components/QuestionsSummary/QuestionsSummary.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionSummaryItem from './QuestionSummaryItem';\nimport QuestionArea from './QuestionArea';\nimport styles from './QuestionsSummary.module.css';\n\nconst questionsSummary = props => {\n  const questionSummaryItems = props.questions.map(question => {\n    return /*#__PURE__*/React.createElement(QuestionSummaryItem, {\n      onQuestionSelected: props.onQuestionSelected,\n      question: question.text,\n      answers: question.answers.length,\n      id: question.id,\n      key: question.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.questionSummary,\n    \"data-testid\": \"questionsSummaryId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Perguntas\"), questionSummaryItems, /*#__PURE__*/React.createElement(QuestionArea, {\n    newQuestion: props.newQuestion,\n    onNewQuestionChange: props.onNewQuestionChange,\n    onNewQuestionSubmit: props.onNewQuestionSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n};\n\nquestionsSummary.defaultProps = {\n  questions: []\n};\nquestionsSummary.propTypes = {\n  onQuestionSelected: PropTypes.func,\n  newQuestion: PropTypes.string,\n  onNewQuestionChange: PropTypes.func,\n  onNewQuestionSubmit: PropTypes.func,\n  questions: PropTypes.array\n};\nexport default questionsSummary;","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/components/QuestionsSummary/QuestionsSummary.js"],"names":["React","PropTypes","QuestionSummaryItem","QuestionArea","styles","questionsSummary","props","questionSummaryItems","questions","map","question","onQuestionSelected","text","answers","length","id","questionSummary","newQuestion","onNewQuestionChange","onNewQuestionSubmit","defaultProps","propTypes","func","string","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAoB,+BAApB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAMC,oBAAoB,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAqBC,QAAQ,IAAI;AAC1D,wBAAO,oBAAC,mBAAD;AACC,MAAA,kBAAkB,EAAIJ,KAAK,CAACK,kBAD7B;AAEC,MAAA,QAAQ,EAAID,QAAQ,CAACE,IAFtB;AAGC,MAAA,OAAO,EAAIF,QAAQ,CAACG,OAAT,CAAiBC,MAH7B;AAIC,MAAA,EAAE,EAAIJ,QAAQ,CAACK,EAJhB;AAKC,MAAA,GAAG,EAAEL,QAAQ,CAACK,EALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH,GAP4B,CAA7B;AASA,sBACI;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACY,eAAvB;AAAwC,mBAAY,oBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKT,oBAFL,eAGI,oBAAC,YAAD;AACI,IAAA,WAAW,EAAED,KAAK,CAACW,WADvB;AAEI,IAAA,mBAAmB,EAAEX,KAAK,CAACY,mBAF/B;AAGI,IAAA,mBAAmB,EAAEZ,KAAK,CAACa,mBAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAUH,CApBD;;AAsBAd,gBAAgB,CAACe,YAAjB,GAAgC;AAC5BZ,EAAAA,SAAS,EAAE;AADiB,CAAhC;AAIAH,gBAAgB,CAACgB,SAAjB,GAA6B;AACzBV,EAAAA,kBAAkB,EAAEV,SAAS,CAACqB,IADL;AAEzBL,EAAAA,WAAW,EAAEhB,SAAS,CAACsB,MAFE;AAGzBL,EAAAA,mBAAmB,EAAEjB,SAAS,CAACqB,IAHN;AAIzBH,EAAAA,mBAAmB,EAAElB,SAAS,CAACqB,IAJN;AAKzBd,EAAAA,SAAS,EAAEP,SAAS,CAACuB;AALI,CAA7B;AAQA,eAAenB,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionSummaryItem from './QuestionSummaryItem';\nimport QuestionArea from './QuestionArea';\nimport styles from  './QuestionsSummary.module.css';\n\nconst questionsSummary = props => {\n    const questionSummaryItems = props.questions.map( question => {\n        return <QuestionSummaryItem \n                onQuestionSelected = {props.onQuestionSelected}\n                question = {question.text}\n                answers = {question.answers.length}\n                id = {question.id}\n                key={question.id}/>;\n    });\n\n    return (\n        <div className={styles.questionSummary} data-testid='questionsSummaryId'>\n            <p>Perguntas</p> \n            {questionSummaryItems}\n            <QuestionArea \n                newQuestion={props.newQuestion}\n                onNewQuestionChange={props.onNewQuestionChange}\n                onNewQuestionSubmit={props.onNewQuestionSubmit} />\n        </div>\n    );\n};\n\nquestionsSummary.defaultProps = {\n    questions: []\n}\n\nquestionsSummary.propTypes = {\n    onQuestionSelected: PropTypes.func,\n    newQuestion: PropTypes.string,\n    onNewQuestionChange: PropTypes.func,\n    onNewQuestionSubmit: PropTypes.func,  \n    questions: PropTypes.array\n};\n\nexport default questionsSummary;"]},"metadata":{},"sourceType":"module"}