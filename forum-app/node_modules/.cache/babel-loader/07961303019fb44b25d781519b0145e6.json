{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionDetailPage.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BackButton from '../components/UI/BackButton/BackButton';\nimport QuestionBox from '../components/QuestionDetail/QuestionBox/QuestionBox';\nimport AnswerList from '../components/QuestionDetail/AnswerList/AnswerList';\nimport AnswerForm from '../components/UI/Forms/AnswerForm';\nimport AuthContext from '../context/AuthContext';\nimport styles from './QuestionDetailPage.module.css';\nimport { findAnswersByQuestionId, createAnswer } from '../services/Answer';\n\nclass QuestionDetailPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchAnswersByQuestionId = async questionId => {\n      const response = await findAnswersByQuestionId(questionId);\n\n      if (response.error) {\n        this.setState({\n          errorMessage: response.message\n        });\n        this.setState({\n          error: true\n        });\n      } else {\n        this.setState({\n          answers: [...response.answers]\n        });\n        this.setState({\n          error: false\n        });\n      }\n    };\n\n    this.saveAnswer = async (newAnswer, username, questionId) => {\n      const answer = {\n        text: newAnswer,\n        user: username,\n        questionId: questionId\n      };\n      const response = await createAnswer(answer);\n\n      if (response.error) {\n        this.setState({\n          errorMessage: response.message\n        });\n        this.setState({\n          error: true\n        });\n      } else {\n        this.setState({\n          error: false\n        });\n      }\n    };\n\n    this.onNewAnswerChange = value => {\n      this.setState({\n        newAnswer: value\n      });\n    };\n\n    this.onNewAnswerSubmit = async (event, username, questionId) => {\n      event.preventDefault();\n\n      if (window.confirm('Tem certeza que deseja enviar resposta?')) {\n        await this.saveAnswer(this.state.newAnswer, username, questionId);\n        this.setState({\n          newAnswer: ''\n        });\n      }\n\n      await this.fetchAnswersByQuestionId(this.props.selectedQuestion.id);\n    };\n\n    this.componentDidMount = async () => {\n      await this.fetchAnswersByQuestionId(this.props.selectedQuestion.id);\n    };\n\n    this.state = {\n      newAnswer: '',\n      answers: [],\n      error: false,\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    const {\n      selectedQuestion\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.QuestionDetailPage,\n      \"data-testid\": \"questionDetailId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ApiError, {\n      error: error,\n      message: errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      clicked: this.props.backButtonClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(QuestionBox, {\n      question: selectedQuestion.text,\n      user: selectedQuestion.user,\n      answers: this.state.answers.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AnswerList, {\n      answerList: this.state.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, context => /*#__PURE__*/React.createElement(AnswerForm, {\n      questionId: selectedQuestion.id,\n      username: context.username,\n      newAnswer: this.state.newAnswer,\n      onNewAnswerChange: this.onNewAnswerChange,\n      onNewAnswerSubmit: this.onNewAnswerSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }))));\n  }\n\n}\n\nQuestionDetailPage.defaultProps = {\n  selectedQuestion: {\n    id: '',\n    text: '',\n    user: '',\n    creationDate: '',\n    answers: []\n  }\n};\nQuestionDetailPage.propTypes = {\n  backButtonClicked: PropTypes.func,\n  selectedQuestion: PropTypes.object\n};\nexport default QuestionDetailPage;","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionDetailPage.js"],"names":["React","PureComponent","PropTypes","BackButton","QuestionBox","AnswerList","AnswerForm","AuthContext","styles","findAnswersByQuestionId","createAnswer","QuestionDetailPage","constructor","props","fetchAnswersByQuestionId","questionId","response","error","setState","errorMessage","message","answers","saveAnswer","newAnswer","username","answer","text","user","onNewAnswerChange","value","onNewAnswerSubmit","event","preventDefault","window","confirm","state","selectedQuestion","id","componentDidMount","render","backButtonClicked","length","context","defaultProps","creationDate","propTypes","func","object"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BackButton from '../components/UI/BackButton/BackButton';\nimport QuestionBox from '../components/QuestionDetail/QuestionBox/QuestionBox';\nimport AnswerList from '../components/QuestionDetail/AnswerList/AnswerList';\nimport AnswerForm from '../components/UI/Forms/AnswerForm';\nimport AuthContext from '../context/AuthContext';\nimport styles from './QuestionDetailPage.module.css';\n\nimport { findAnswersByQuestionId, createAnswer } from '../services/Answer';\n\nclass QuestionDetailPage extends PureComponent{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            newAnswer: '',\n            answers: [],\n            error: false,\n            errorMessage: ''    \n        }\n    }\n\n    fetchAnswersByQuestionId = async (questionId) => {\n        const response = await findAnswersByQuestionId(questionId);\n        if(response.error){\n\t\t\tthis.setState({ errorMessage: response.message});\n\t\t\tthis.setState({ error : true });\n\t\t}else{\n\t\t\tthis.setState({ answers: [...response.answers]});\n\t\t\tthis.setState({ error : false });\n\t\t}\n    };\n\n    saveAnswer = async (newAnswer, username, questionId) => {\n        const answer = {text: newAnswer, user: username, questionId: questionId};\n        const response = await createAnswer(answer);\n        if(response.error){\n\t\t\tthis.setState({ errorMessage: response.message});\n\t\t\tthis.setState({ error : true });\n\t\t}else{\n\t\t\tthis.setState({ error : false });\n\t\t}\t\n\t}\n\n\tonNewAnswerChange = (value) =>{\n\t\tthis.setState({newAnswer: value});\n\t}\n\n\tonNewAnswerSubmit = async (event, username, questionId) => {\n        event.preventDefault();\n\t\tif (window.confirm('Tem certeza que deseja enviar resposta?')){\n            await this.saveAnswer(this.state.newAnswer, username, questionId);\n            this.setState({ newAnswer: ''});\n\t\t}\n        await this.fetchAnswersByQuestionId(this.props.selectedQuestion.id);\n    };\n\n    componentDidMount = async () => {\n        await this.fetchAnswersByQuestionId(this.props.selectedQuestion.id);\n    };\n\n    render(){\n        const { selectedQuestion } = this.props;\n        return(\n            <div className={styles.QuestionDetailPage} data-testid='questionDetailId'>\n                <ApiError error={error} message={errorMessage} >\n                    <BackButton clicked={this.props.backButtonClicked} />\n                    <QuestionBox \n                        question={selectedQuestion.text}\n                        user={selectedQuestion.user}\n                        answers={this.state.answers.length} />\n                    <AnswerList answerList = {this.state.answers}/>\n                    \n                    <AuthContext.Consumer>\n                        {context => <AnswerForm \n                            questionId = {selectedQuestion.id}\n                            username={context.username}\n                            newAnswer={this.state.newAnswer}\n                            onNewAnswerChange={this.onNewAnswerChange}\n                            onNewAnswerSubmit={this.onNewAnswerSubmit}/>}\n                    </AuthContext.Consumer>\n                </ApiError>\n               \n            </div>\n        );\n    }\n}\n\nQuestionDetailPage.defaultProps = {\n    selectedQuestion: {\n        id: '',\n        text: '',\n        user: '',\n        creationDate: '',\n        answers:[]\n    }\n};\n\nQuestionDetailPage.propTypes = {\n    backButtonClicked : PropTypes.func,\n    selectedQuestion: PropTypes.object\n};\n\nexport default QuestionDetailPage;\n\n\n"]},"metadata":{},"sourceType":"module"}