{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport const listQuestions = async () => {\n  try {\n    const response = await axios.get('/question/all', config);\n    console.log(response);\n\n    if (response.status === 200) {\n      return {\n        questions: response.data,\n        error: false\n      };\n    }\n\n    if (response.status === 204) {\n      return {\n        questions: [],\n        error: false\n      };\n    }\n\n    if (response.status === 400) {\n      return {\n        error: true,\n        message: \"Resource doest not exist.\"\n      };\n    }\n\n    if (response.status === 500) {\n      return {\n        error: true,\n        message: \"Internal server Error.\"\n      };\n    }\n  } catch (error) {\n    return {\n      questions: [],\n      error: true,\n      message: error\n    };\n  }\n};\nexport const createQuestion = async question => {\n  try {\n    const response = await axios.post('/question/save', question, config);\n    return {\n      question: response.data,\n      error: false\n    };\n  } catch (error) {\n    return {\n      question: {},\n      error: true,\n      message: error\n    };\n  }\n};","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/services/Question.js"],"names":["axios","config","listQuestions","response","get","console","log","status","questions","data","error","message","createQuestion","question","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAW;AACpC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BH,MAA3B,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAGA,QAAQ,CAACI,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEC,QAAAA,SAAS,EAAEL,QAAQ,CAACM,IAAtB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAAP;AACH;;AACD,QAAGP,QAAQ,CAACI,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEC,QAAAA,SAAS,EAAE,EAAb;AAAiBE,QAAAA,KAAK,EAAE;AAAxB,OAAP;AACH;;AACD,QAAGP,QAAQ,CAACI,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;;AACD,QAAGR,QAAQ,CAACI,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEG,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;AACJ,GAfD,CAeE,OAAOD,KAAP,EAAc;AACZ,WAAO;AAAEF,MAAAA,SAAS,EAAE,EAAb;AAAiBE,MAAAA,KAAK,EAAE,IAAxB;AAA8BC,MAAAA,OAAO,EAAED;AAAvC,KAAP;AACH;AACJ,CAnBM;AAqBP,OAAO,MAAME,cAAc,GAAI,MAAMC,QAAN,IAAmB;AAC9C,MAAI;AACA,UAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,IAAN,CAAW,gBAAX,EAA6BD,QAA7B,EAAuCZ,MAAvC,CAAvB;AACA,WAAO;AAAEY,MAAAA,QAAQ,EAAEV,QAAQ,CAACM,IAArB;AAA2BC,MAAAA,KAAK,EAAE;AAAlC,KAAP;AACH,GAHD,CAGE,OAAOA,KAAP,EAAc;AACZ,WAAO;AAAEG,MAAAA,QAAQ,EAAG,EAAb;AAAiBH,MAAAA,KAAK,EAAE,IAAxB;AAA8BC,MAAAA,OAAO,EAAED;AAAvC,KAAP;AACH;AAEJ,CARM","sourcesContent":["import axios from 'axios';\nimport config from './config';\n\nexport const listQuestions = async () =>{\n    try {\n        const response = await axios.get('/question/all', config);\n        console.log(response)\n        if(response.status === 200){\n            return { questions: response.data, error: false} ;\n        }\n        if(response.status === 204){\n            return { questions :[], error: false};\n        }\n        if(response.status === 400){\n            return { error: true, message: \"Resource doest not exist.\"};\n        }\n        if(response.status === 500){\n            return { error: true, message: \"Internal server Error.\"}\n        }\n    } catch (error) {\n        return { questions :[], error: true, message: error};\n    }\n};\n\nexport const createQuestion =  async(question) => {\n    try {\n        const response = await axios.post('/question/save', question, config);\n        return { question: response.data, error: false }\n    } catch (error) {\n        return { question : {}, error: true, message: error};\n    }\n   \n};\n\n"]},"metadata":{},"sourceType":"module"}