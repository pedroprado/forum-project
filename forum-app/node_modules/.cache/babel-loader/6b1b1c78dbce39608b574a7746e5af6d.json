{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport const listQuestions = async () => {\n  try {\n    const questions = await axios.get('/question/all', config);\n    console.log(questions);\n\n    if (questions.status === 204) {\n      return {\n        questions: [],\n        error: 0\n      };\n    }\n\n    return {\n      questions: questions.data,\n      error: 0\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      questions: [],\n      error: 1\n    };\n  }\n};\nexport const createQuestion = async question => {\n  return await axios.post('/question/save', question, config);\n};","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/services/Question.js"],"names":["axios","config","listQuestions","questions","get","console","log","status","error","data","createQuestion","question","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,aAAa,GAAG,YAAW;AACpC,MAAI;AACA,UAAMC,SAAS,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,eAAV,EAA2BH,MAA3B,CAAxB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;;AACA,QAAGA,SAAS,CAACI,MAAV,KAAqB,GAAxB,EAA4B;AACxB,aAAO;AAAEJ,QAAAA,SAAS,EAAE,EAAb;AAAiBK,QAAAA,KAAK,EAAE;AAAxB,OAAP;AACH;;AACD,WAAO;AAAEL,MAAAA,SAAS,EAAEA,SAAS,CAACM,IAAvB;AAA6BD,MAAAA,KAAK,EAAE;AAApC,KAAP;AACH,GAPD,CAOE,OAAOA,KAAP,EAAc;AACZH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACA,WAAO;AAAEL,MAAAA,SAAS,EAAE,EAAb;AAAiBK,MAAAA,KAAK,EAAE;AAAxB,KAAP;AACH;AAEJ,CAbM;AAeP,OAAO,MAAME,cAAc,GAAI,MAAMC,QAAN,IAAmB;AAC/C,SAAO,MAAMX,KAAK,CAACY,IAAN,CAAW,gBAAX,EAA6BD,QAA7B,EAAuCV,MAAvC,CAAb;AACF,CAFM","sourcesContent":["import axios from 'axios';\nimport config from './config';\n\nexport const listQuestions = async () =>{\n    try {\n        const questions = await axios.get('/question/all', config);\n        console.log(questions)\n        if(questions.status === 204){\n            return { questions :[], error: 0};\n        }\n        return { questions: questions.data, error: 0} ;\n    } catch (error) {\n        console.log(error)\n        return { questions :[], error: 1};\n    }\n  \n};\n\nexport const createQuestion =  async(question) => {\n   return await axios.post('/question/save', question, config);\n};\n\n"]},"metadata":{},"sourceType":"module"}