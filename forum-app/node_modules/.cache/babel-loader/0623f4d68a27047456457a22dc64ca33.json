{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionsPage.js\";\nimport React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\nimport QuestionDetailPage from './QuestionDetailPage';\nimport './QuestionsPage.css';\nimport { listQuestions, createQuestion } from '../services/Question';\n\nclass QuestionsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchQuestions = async () => {\n      const questions = await listQuestions();\n      if (questions.data[0] === undefined || questions.data.length === 0) return [];\n      return questions.data;\n    };\n\n    this.saveQuestion = async (newQuestion, username) => {};\n\n    this.fetchQuestionsNumberOfAnswers = async () => {};\n\n    this.onBackButtonClicked = () => {\n      this.setState({\n        selectedQuestionItem: {}\n      });\n      this.setState({\n        viewQuestion: false\n      });\n    };\n\n    this.onQuestionItemSelected = id => {\n      const questionItemSelected = this.state.questions.filter(question => question.id === id);\n      this.setState({\n        selectedQuestionItem: questionItemSelected[0]\n      });\n      this.setState({\n        viewQuestion: true\n      });\n    };\n\n    this.obtainQuestionsSummaryList = questions => {\n      if (questions.length !== 0) {\n        const questionsList = [...questions];\n        const questionSummary = questionsList.map(question => {\n          return {\n            questionId: question.id,\n            question: question.text,\n            answers: question.answers.length\n          };\n        }) || [];\n        return questionSummary;\n      }\n\n      return [];\n    };\n\n    this.onNewQuestionChange = event => {\n      this.setState({\n        newQuestion: event.target.value\n      });\n    };\n\n    this.onNewQuestionSubmit = (event, username) => {\n      if (window.confirm('Tem certeza que deseja enviar pergunta?')) {\n        this.saveQuestion(this.state.newQuestion, username);\n      }\n\n      event.preventDefault();\n    };\n\n    this.componentDidMount = () => {\n      const newQuestions = [...questionsConst];\n      this.setState({\n        questions: newQuestions\n      });\n      this.fetchQuestions();\n    };\n\n    this.state = {\n      questions: [],\n      selectedQuestionItem: {},\n      viewQuestionDetail: false,\n      newQuestion: ''\n    };\n  }\n\n  render() {\n    const {\n      questions,\n      viewQuestionDetail,\n      selectedQuestionItem\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"QuestionsPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    }, viewQuestionDetail ? /*#__PURE__*/React.createElement(QuestionDetailPage, {\n      backButtonClicked: this.onBackButtonClicked,\n      selectedQuestion: selectedQuestionItem,\n      onNewAnswerChange: this.onNewAnswerChange,\n      onNewAnswerSubmit: this.onNewAnswerSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(QuestionsSummary, {\n      onQuestionSelected: this.onQuestionItemSelected,\n      newQuestion: this.state.newQuestion,\n      onNewQuestionChange: this.onNewQuestionChange,\n      onNewQuestionSubmit: this.onNewQuestionSubmit,\n      questionsSummaryList: this.obtainQuestionsSummaryList(questions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default QuestionsPage;\nconst questionsConst = [{\n  id: 123,\n  text: \"My question ahuwauwuhau ahahuuahawuoeaeahfoheoeafhheafoaeoaoeihaoiheoahoehioahoheoiaeiohehaiehoihoiaehioeahioeahioeahoieahioaehoiheaioeoihaohiaeehaioohiea\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }, {\n    id: 1235,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }, {\n    id: 1236,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 124,\n  text: \"My question 2\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 125,\n  text: \"My question 3\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer 4\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 126,\n  text: \"My question 5\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}];","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionsPage.js"],"names":["React","PureComponent","QuestionsSummary","QuestionDetailPage","listQuestions","createQuestion","QuestionsPage","constructor","props","fetchQuestions","questions","data","undefined","length","saveQuestion","newQuestion","username","fetchQuestionsNumberOfAnswers","onBackButtonClicked","setState","selectedQuestionItem","viewQuestion","onQuestionItemSelected","id","questionItemSelected","state","filter","question","obtainQuestionsSummaryList","questionsList","questionSummary","map","questionId","text","answers","onNewQuestionChange","event","target","value","onNewQuestionSubmit","window","confirm","preventDefault","componentDidMount","newQuestions","questionsConst","viewQuestionDetail","render","onNewAnswerChange","onNewAnswerSubmit","user","creationDate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,gBAAP,MAA6B,iDAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAO,qBAAP;AAEA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,sBAA9C;;AAEA,MAAMC,aAAN,SAA4BL,aAA5B,CAAyC;AAErCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAWtBC,cAXsB,GAWL,YAAY;AAC5B,YAAMC,SAAS,GAAG,MAAMN,aAAa,EAArC;AACA,UAAGM,SAAS,CAACC,IAAV,CAAe,CAAf,MAAsBC,SAAtB,IAAmCF,SAAS,CAACC,IAAV,CAAeE,MAAf,KAA0B,CAAhE,EACC,OAAO,EAAP;AACD,aAAOH,SAAS,CAACC,IAAjB;AACA,KAhBqB;;AAAA,SAkBtBG,YAlBsB,GAkBP,OAAOC,WAAP,EAAoBC,QAApB,KAAiC,CAE/C,CApBqB;;AAAA,SAsBtBC,6BAtBsB,GAsBU,YAAW,CAE1C,CAxBqB;;AAAA,SA2BtBC,mBA3BsB,GA2BA,MAAK;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,oBAAoB,EAAE;AAAvB,OAAd;AACA,WAAKD,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,KA9BqB;;AAAA,SAgCtBC,sBAhCsB,GAgCIC,EAAD,IAAM;AAC9B,YAAMC,oBAAoB,GAAG,KAAKC,KAAL,CAAWf,SAAX,CAAqBgB,MAArB,CAA6BC,QAAQ,IAAIA,QAAQ,CAACJ,EAAT,KAAgBA,EAAzD,CAA7B;AACA,WAAKJ,QAAL,CAAc;AAACC,QAAAA,oBAAoB,EAAEI,oBAAoB,CAAC,CAAD;AAA3C,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACA,KApCqB;;AAAA,SAuCnBO,0BAvCmB,GAuCWlB,SAAD,IAAe;AACxC,UAAGA,SAAS,CAACG,MAAV,KAAqB,CAAxB,EAA2B;AACvB,cAAMgB,aAAa,GAAG,CAAC,GAAGnB,SAAJ,CAAtB;AACA,cAAMoB,eAAe,GAAGD,aAAa,CAACE,GAAd,CAAmBJ,QAAQ,IAAI;AACnD,iBAAO;AAAEK,YAAAA,UAAU,EAAEL,QAAQ,CAACJ,EAAvB;AAA4BI,YAAAA,QAAQ,EAAEA,QAAQ,CAACM,IAA/C;AAAqDC,YAAAA,OAAO,EAAEP,QAAQ,CAACO,OAAT,CAAiBrB;AAA/E,WAAP;AACH,SAFuB,KAElB,EAFN;AAKA,eAAOiB,eAAP;AACH;;AACD,aAAO,EAAP;AACH,KAlDkB;;AAAA,SAuDtBK,mBAvDsB,GAuDCC,KAAD,IAAU;AAC/B,WAAKjB,QAAL,CAAc;AAACJ,QAAAA,WAAW,EAAEqB,KAAK,CAACC,MAAN,CAAaC;AAA3B,OAAd;AACA,KAzDqB;;AAAA,SA2DtBC,mBA3DsB,GA2DA,CAACH,KAAD,EAAQpB,QAAR,KAAqB;AAC1C,UAAIwB,MAAM,CAACC,OAAP,CAAe,yCAAf,CAAJ,EAA8D;AAC7D,aAAK3B,YAAL,CAAkB,KAAKW,KAAL,CAAWV,WAA7B,EAA0CC,QAA1C;AACA;;AACDoB,MAAAA,KAAK,CAACM,cAAN;AAEA,KAjEqB;;AAAA,SAmEnBC,iBAnEmB,GAmEC,MAAM;AACtB,YAAMC,YAAY,GAAG,CAAC,GAAGC,cAAJ,CAArB;AACN,WAAK1B,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAGkC;AAAd,OAAd;AACA,WAAKnC,cAAL;AACG,KAvEkB;;AAEf,SAAKgB,KAAL,GAAa;AAClBf,MAAAA,SAAS,EAAE,EADO;AAEhBU,MAAAA,oBAAoB,EAAE,EAFN;AAGlB0B,MAAAA,kBAAkB,EAAE,KAHF;AAIlB/B,MAAAA,WAAW,EAAE;AAJK,KAAb;AAMD;;AAiEHgC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAErC,MAAAA,SAAF;AAAaoC,MAAAA,kBAAb;AAAkC1B,MAAAA;AAAlC,QAA0D,KAAKK,KAArE;AACA,wBACG;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJqB,kBAAkB,gBACnB,oBAAC,kBAAD;AACD,MAAA,iBAAiB,EAAE,KAAK5B,mBADvB;AAED,MAAA,gBAAgB,EAAEE,oBAFjB;AAGD,MAAA,iBAAiB,EAAE,KAAK4B,iBAHvB;AAID,MAAA,iBAAiB,EAAE,KAAKC,iBAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADmB,gBAOnB,oBAAC,gBAAD;AACD,MAAA,kBAAkB,EAAE,KAAK3B,sBADxB;AAED,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWV,WAFvB;AAGD,MAAA,mBAAmB,EAAE,KAAKoB,mBAHzB;AAID,MAAA,mBAAmB,EAAI,KAAKI,mBAJ3B;AAKW,MAAA,oBAAoB,EAAE,KAAKX,0BAAL,CAAgClB,SAAhC,CALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARK,CADH;AAkBH;;AA/FoC;;AAkGzC,eAAeJ,aAAf;AAIA,MAAMuC,cAAc,GAAG,CACnB;AACAtB,EAAAA,EAAE,EAAE,GADJ;AAEAU,EAAAA,IAAI,EAAE,4JAFN;AAGAiB,EAAAA,IAAI,EAAE,UAHN;AAIAC,EAAAA,YAAY,EAAE,qBAJd;AAKAjB,EAAAA,OAAO,EAAE,CACP;AACEX,IAAAA,EAAE,EAAE,IADN;AAEEU,IAAAA,IAAI,EAAE,WAFR;AAGEiB,IAAAA,IAAI,EAAE,kBAHR;AAIEC,IAAAA,YAAY,EAAE;AAJhB,GADO,EAOV;AACK5B,IAAAA,EAAE,EAAE,IADT;AAEKU,IAAAA,IAAI,EAAE,WAFX;AAGKiB,IAAAA,IAAI,EAAE,kBAHX;AAIKC,IAAAA,YAAY,EAAE;AAJnB,GAPU,EAaV;AACK5B,IAAAA,EAAE,EAAE,IADT;AAEKU,IAAAA,IAAI,EAAE,WAFX;AAGKiB,IAAAA,IAAI,EAAE,kBAHX;AAIKC,IAAAA,YAAY,EAAE;AAJnB,GAbU;AALT,CADmB,EA2BtB;AACA5B,EAAAA,EAAE,EAAE,GADJ;AAEAU,EAAAA,IAAI,EAAE,eAFN;AAGAiB,EAAAA,IAAI,EAAE,UAHN;AAIAC,EAAAA,YAAY,EAAE,qBAJd;AAKAjB,EAAAA,OAAO,EAAE,CACR;AACAX,IAAAA,EAAE,EAAE,IADJ;AAEAU,IAAAA,IAAI,EAAE,WAFN;AAGAiB,IAAAA,IAAI,EAAE,kBAHN;AAIAC,IAAAA,YAAY,EAAE;AAJd,GADQ;AALT,CA3BsB,EAyCtB;AACC5B,EAAAA,EAAE,EAAE,GADL;AAECU,EAAAA,IAAI,EAAE,eAFP;AAGCiB,EAAAA,IAAI,EAAE,UAHP;AAICC,EAAAA,YAAY,EAAE,qBAJf;AAKCjB,EAAAA,OAAO,EAAE,CACR;AACAX,IAAAA,EAAE,EAAE,IADJ;AAEAU,IAAAA,IAAI,EAAE,aAFN;AAGAiB,IAAAA,IAAI,EAAE,kBAHN;AAIAC,IAAAA,YAAY,EAAE;AAJd,GADQ;AALV,CAzCsB,EAuDtB;AACC5B,EAAAA,EAAE,EAAE,GADL;AAECU,EAAAA,IAAI,EAAE,eAFP;AAGCiB,EAAAA,IAAI,EAAE,UAHP;AAICC,EAAAA,YAAY,EAAE,qBAJf;AAKCjB,EAAAA,OAAO,EAAE,CACR;AACAX,IAAAA,EAAE,EAAE,IADJ;AAEAU,IAAAA,IAAI,EAAE,WAFN;AAGAiB,IAAAA,IAAI,EAAE,kBAHN;AAIAC,IAAAA,YAAY,EAAE;AAJd,GADQ;AALV,CAvDsB,CAAvB","sourcesContent":["import React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\nimport QuestionDetailPage from './QuestionDetailPage';\nimport './QuestionsPage.css'\n\nimport { listQuestions, createQuestion } from '../services/Question';\n\nclass QuestionsPage extends PureComponent{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\t\t\tquestions: [],\n\t\t  \tselectedQuestionItem: {},\n\t\t\tviewQuestionDetail: false,\n\t\t\tnewQuestion: ''\n        };\n      }\n\n\n\tfetchQuestions = async () => {\n\t\tconst questions = await listQuestions();\n\t\tif(questions.data[0] === undefined || questions.data.length === 0) \n\t\t\treturn [];\n\t\treturn questions.data;\n\t};\n\n\tsaveQuestion = async (newQuestion, username) => {\n\n\t}\n\n\tfetchQuestionsNumberOfAnswers = async () =>{\n\n\t};\n\n\n\tonBackButtonClicked = () =>{\n\t\tthis.setState({selectedQuestionItem: {} });\n\t\tthis.setState({ viewQuestion: false});\n\t};\n\t  \n\tonQuestionItemSelected = (id)=>{\n\t\tconst questionItemSelected = this.state.questions.filter( question => question.id === id);\n\t\tthis.setState({selectedQuestionItem: questionItemSelected[0]});\n\t\tthis.setState({ viewQuestion: true});\n\t};\n\n\n    obtainQuestionsSummaryList = (questions) => {\n        if(questions.length !== 0 ){\n            const questionsList = [...questions];\n            const questionSummary = questionsList.map( question => {\n                return { questionId: question.id , question: question.text, answers: question.answers.length }\n            }) || [];\n         \n\n            return questionSummary;\n        }\n        return [];\n    };\n\t\n\t\n\t\n\n\tonNewQuestionChange = (event) =>{\n\t\tthis.setState({newQuestion: event.target.value});\n\t}\n\n\tonNewQuestionSubmit = (event, username) => {\n\t\tif (window.confirm('Tem certeza que deseja enviar pergunta?')){\n\t\t\tthis.saveQuestion(this.state.newQuestion, username)\n\t\t}\n\t\tevent.preventDefault();\n\t\t\n\t};\n\n    componentDidMount = () => {\n        const newQuestions = [...questionsConst];\n\t\tthis.setState({ questions : newQuestions});\n\t\tthis.fetchQuestions();\n    }\n\n    render(){\n        const { questions, viewQuestionDetail , selectedQuestionItem} = this.state;\n        return(\n           <div className='QuestionsPage'>\n\t\t\t   {viewQuestionDetail? \n\t\t\t   <QuestionDetailPage \n\t\t\t\t\tbackButtonClicked={this.onBackButtonClicked}\n\t\t\t\t\tselectedQuestion={selectedQuestionItem}\n\t\t\t\t\tonNewAnswerChange={this.onNewAnswerChange}\n\t\t\t\t\tonNewAnswerSubmit={this.onNewAnswerSubmit} /> \n\t\t\t   :  \n\t\t\t   <QuestionsSummary\n\t\t\t\t\tonQuestionSelected={this.onQuestionItemSelected}\n\t\t\t\t\tnewQuestion={this.state.newQuestion} \n\t\t\t\t\tonNewQuestionChange={this.onNewQuestionChange}\n\t\t\t\t\tonNewQuestionSubmit = {this.onNewQuestionSubmit}   \n                \tquestionsSummaryList={this.obtainQuestionsSummaryList(questions)} /> }\n           </div>\n        );\n    \n    };\n}\n\nexport default QuestionsPage;\n\n\n\nconst questionsConst = [\n    {\n    id: 123,\n    text: \"My question ahuwauwuhau ahahuuahawuoeaeahfoheoeafhheafoaeoaoeihaoiheoahoehioahoheoiaeiohehaiehoihoiaehioeahioeahioeahoieahioaehoiheaioeoihaohiaeehaioohiea\",\n    user: \"username\",\n    creationDate: \"2020-01-01 12:00:00\",\n    answers: [\n      {\n        id: 1234,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n\t  },\n\t  {\n        id: 1235,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n\t  },\n\t  {\n        id: 1236,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n      }\n    ]\n\t},\n\t{\n\tid: 124,\n\ttext: \"My question 2\",\n\tuser: \"username\",\n\tcreationDate: \"2020-01-01 12:00:00\",\n\tanswers: [\n\t\t{\n\t\tid: 1234,\n\t\ttext: \"My answer\",\n\t\tuser: \"another.username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t}\n\t]\n\t},\n\t{\n\t\tid: 125,\n\t\ttext: \"My question 3\",\n\t\tuser: \"username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\tanswers: [\n\t\t\t{\n\t\t\tid: 1234,\n\t\t\ttext: \"My answer 4\",\n\t\t\tuser: \"another.username\",\n\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t\t}\n\t\t]\n\t},  \n\t{\n\t\tid: 126,\n\t\ttext: \"My question 5\",\n\t\tuser: \"username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\tanswers: [\n\t\t\t{\n\t\t\tid: 1234,\n\t\t\ttext: \"My answer\",\n\t\t\tuser: \"another.username\",\n\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t\t}\n\t\t]\n\t}\n]"]},"metadata":{},"sourceType":"module"}