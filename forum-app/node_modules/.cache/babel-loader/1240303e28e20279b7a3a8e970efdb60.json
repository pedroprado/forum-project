{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/forum-app2/src/containers/QuestionsPage.js\";\nimport React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\n\nclass QuestionsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.obtainQuestionsSummaryList = questions => {\n      if (questions !== undefined) {\n        const questionsList = [...questions];\n        const questionSummary = questionsList.map((question, key) => {\n          return {\n            questionId: question.id,\n            question: question.text,\n            answers: question.answers.length\n          };\n        }) || [];\n        return questionSummary;\n      }\n\n      return [];\n    };\n\n    this.componentDidMount = () => {\n      const newQuestions = [...questionsConst];\n      this.setState({\n        questions: newQuestions\n      });\n    };\n\n    this.state = {\n      questions: [],\n      questionSummary: []\n    };\n  }\n\n  render() {\n    const {\n      questions\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(QuestionsSummary, {\n      questionsSummaryList: this.obtainQuestionsSummaryList(questions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nexport default QuestionsPage;\nconst questionsConst = [{\n  id: 123,\n  text: \"My question\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 124,\n  text: \"My question\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 125,\n  text: \"My question\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}, {\n  id: 126,\n  text: \"My question\",\n  user: \"username\",\n  creationDate: \"2020-01-01 12:00:00\",\n  answers: [{\n    id: 1234,\n    text: \"My answer\",\n    user: \"another.username\",\n    creationDate: \"2020-01-01 12:00:00\"\n  }]\n}];","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/forum-app2/src/containers/QuestionsPage.js"],"names":["React","PureComponent","QuestionsSummary","QuestionsPage","constructor","props","obtainQuestionsSummaryList","questions","undefined","questionsList","questionSummary","map","question","key","questionId","id","text","answers","length","componentDidMount","newQuestions","questionsConst","setState","state","render","user","creationDate"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport QuestionsSummary from '../components/QuestionsSummary/QuestionsSummary';\n\nclass QuestionsPage extends PureComponent{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          questions: [],\n          questionSummary: []\n        };\n      }\n\n\n\n    obtainQuestionsSummaryList = (questions) => {\n        if(questions !== undefined){\n            const questionsList = [...questions];\n            const questionSummary = questionsList.map( (question, key) => {\n                return { questionId: question.id , question: question.text, answers: question.answers.length }\n            }) || [];\n         \n\n            return questionSummary;\n        }\n        return [];\n    };\n    \n    componentDidMount = () => {\n        const newQuestions = [...questionsConst];\n        this.setState({ questions : newQuestions})\n    }\n\n    render(){\n        const { questions } = this.state;\n        return(\n           <div>\n               <QuestionsSummary \n                \tquestionsSummaryList={this.obtainQuestionsSummaryList(questions)} />\n           </div>\n        );\n    \n    };\n}\n\nexport default QuestionsPage;\n\n\nconst questionsConst = [\n    {\n    id: 123,\n    text: \"My question\",\n    user: \"username\",\n    creationDate: \"2020-01-01 12:00:00\",\n    answers: [\n      {\n        id: 1234,\n        text: \"My answer\",\n        user: \"another.username\",\n        creationDate: \"2020-01-01 12:00:00\"\n      }\n    ]\n\t},\n\t{\n\t\tid: 124,\n\t\ttext: \"My question\",\n\t\tuser: \"username\",\n\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\tanswers: [\n\t\t  {\n\t\t\tid: 1234,\n\t\t\ttext: \"My answer\",\n\t\t\tuser: \"another.username\",\n\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t  }\n\t\t]\n\t\t},\n\t\t{\n\t\t\tid: 125,\n\t\t\ttext: \"My question\",\n\t\t\tuser: \"username\",\n\t\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\t\tanswers: [\n\t\t\t  {\n\t\t\t\tid: 1234,\n\t\t\t\ttext: \"My answer\",\n\t\t\t\tuser: \"another.username\",\n\t\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t\t  }\n\t\t\t]\n\t\t\t},  {\n\t\t\t\tid: 126,\n\t\t\t\ttext: \"My question\",\n\t\t\t\tuser: \"username\",\n\t\t\t\tcreationDate: \"2020-01-01 12:00:00\",\n\t\t\t\tanswers: [\n\t\t\t\t  {\n\t\t\t\t\tid: 1234,\n\t\t\t\t\ttext: \"My answer\",\n\t\t\t\t\tuser: \"another.username\",\n\t\t\t\t\tcreationDate: \"2020-01-01 12:00:00\"\n\t\t\t\t  }\n\t\t\t\t]\n\t\t\t\t}\n]"]},"metadata":{},"sourceType":"module"}