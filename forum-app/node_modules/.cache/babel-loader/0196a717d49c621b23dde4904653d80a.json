{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionDetailPage.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BackButton from '../components/UI/BackButton/BackButton';\nimport AnswerList from '../components/QuestionDetail/AnswerList/AnswerList';\nimport QuestionBox from '../components/QuestionDetail/QuestionBox/QuestionBox';\nimport AddAnswerForm from '../components/UI/Forms/AddAnswerForm';\nimport AuthContext from '../context/AuthContext';\nimport './QuestionDetailPage.css';\n\nclass QuestionDetailPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchAnwersByQuestionId = questionId => {};\n\n    this.saveAnswer = async (newAnswer, username, questionId) => {};\n\n    this.onNewAnswerChange = event => {\n      this.setState({\n        newAnswer: event.target.value\n      });\n    };\n\n    this.onNewAnswerSubmit = (event, username, questionId) => {\n      if (window.confirm('Tem certeza que deseja enviar resposta?')) {\n        this.saveAnswer(this.state.newAnswer, username, questionId);\n      }\n\n      event.preventDefault();\n    };\n\n    this.state = {\n      newAnswer: ''\n    };\n  }\n\n  render() {\n    const selectedQuestion = { ...this.props.selectedQuestion\n    };\n    console.log(selectedQuestion.answers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"QuestionDetailPage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BackButton, {\n      clicked: () => this.props.backButtonClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(QuestionBox, {\n      question: selectedQuestion.text,\n      user: selectedQuestion.user,\n      answers: selectedQuestion.answers === ([] || undefined) ? 0 : selectedQuestion.answers.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AnswerList, {\n      answerList: selectedQuestion.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AuthContext.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, context => /*#__PURE__*/React.createElement(AddAnswerForm, {\n      questionId: selectedQuestion.id,\n      username: context.username,\n      newAnswer: this.state.newAnswer,\n      onNewAnswerChange: this.onNewAnswerChange,\n      onNewAnswerSubmit: this.onNewAnswerSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    })));\n  }\n\n}\n\nQuestionDetailPage.defaultProps = {\n  selectedQuestion: {\n    id: 0,\n    text: '',\n    user: '',\n    creationDate: '',\n    answers: []\n  }\n};\nQuestionDetailPage.propTypes = {\n  backButtonClicked: PropTypes.func,\n  selectedQuestion: PropTypes.object,\n  newAnswer: PropTypes.string,\n  onNewAnswerChange: PropTypes.func,\n  onNewAnswerSubmit: PropTypes.func\n};\nexport default QuestionDetailPage;","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/containers/QuestionDetailPage.js"],"names":["React","PureComponent","PropTypes","BackButton","AnswerList","QuestionBox","AddAnswerForm","AuthContext","QuestionDetailPage","constructor","props","fetchAnwersByQuestionId","questionId","saveAnswer","newAnswer","username","onNewAnswerChange","event","setState","target","value","onNewAnswerSubmit","window","confirm","state","preventDefault","render","selectedQuestion","console","log","answers","backButtonClicked","text","user","undefined","length","context","id","defaultProps","creationDate","propTypes","func","object","string"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport BackButton from '../components/UI/BackButton/BackButton';\nimport AnswerList from '../components/QuestionDetail/AnswerList/AnswerList';\nimport QuestionBox from '../components/QuestionDetail/QuestionBox/QuestionBox';\nimport AddAnswerForm from '../components/UI/Forms/AddAnswerForm';\nimport AuthContext from '../context/AuthContext';\nimport './QuestionDetailPage.css';\n\n\nclass QuestionDetailPage extends PureComponent{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            newAnswer: ''\n        }\n\n    }\n\n\n\n    fetchAnwersByQuestionId = questionId => {\n\n    };\n\n    saveAnswer = async (newAnswer, username, questionId) => {\n\n\t}\n\n\tonNewAnswerChange = (event) =>{\n\t\tthis.setState({newAnswer: event.target.value});\n\t}\n\n\tonNewAnswerSubmit = (event, username, questionId) => {\n\t\tif (window.confirm('Tem certeza que deseja enviar resposta?')){\n\t\t\tthis.saveAnswer(this.state.newAnswer, username, questionId)\n\t\t}\n\t\tevent.preventDefault();\n\t\t\n\t};\n \n\n    render(){\n        const selectedQuestion = {...this.props.selectedQuestion};\n        console.log(selectedQuestion.answers)\n        return(\n            <div className='QuestionDetailPage'>\n                <BackButton clicked={() => this.props.backButtonClicked()} />\n                <QuestionBox \n                    question={selectedQuestion.text}\n                    user={selectedQuestion.user}\n                    answers={selectedQuestion.answers === ([] || undefined) ? 0 : selectedQuestion.answers.length} />\n                <AnswerList answerList = {selectedQuestion.answers}/>\n                \n                <AuthContext.Consumer>\n                    {context => <AddAnswerForm \n                        questionId = {selectedQuestion.id}\n                        username={context.username}\n                        newAnswer={this.state.newAnswer}\n                        onNewAnswerChange={this.onNewAnswerChange}\n                        onNewAnswerSubmit={this.onNewAnswerSubmit}/>}\n                </AuthContext.Consumer>\n            </div>\n        );\n    }\n}\n\nQuestionDetailPage.defaultProps = {\n    selectedQuestion: {\n        id: 0,\n        text: '',\n        user: '',\n        creationDate: '',\n        answers:[]\n    }\n};\n\nQuestionDetailPage.propTypes = {\n    backButtonClicked : PropTypes.func,\n    selectedQuestion: PropTypes.object,\n    newAnswer: PropTypes.string,\n    onNewAnswerChange: PropTypes.func,\n    onNewAnswerSubmit: PropTypes.func\n};\n\nexport default QuestionDetailPage;\n\n\n"]},"metadata":{},"sourceType":"module"}