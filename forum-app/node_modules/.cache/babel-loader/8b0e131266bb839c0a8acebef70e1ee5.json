{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport const findAnswersByQuestionId = async questionId => {\n  try {\n    const response = await axios.get(`/answer/find/${questionId}`, config);\n\n    if (response.status === 200) {\n      return {\n        answers: response.data\n      };\n    }\n\n    if (response.status === 204) {\n      return {\n        answers: []\n      };\n    } else {\n      return {\n        error: true,\n        message: \"Erro desconhecido.\"\n      };\n    }\n  } catch (error) {\n    return {\n      error: true,\n      message: error.message\n    };\n  }\n};\nexport const createAnswer = async answer => {\n  try {\n    const response = await axios.post('/answer/save', answer, config);\n\n    if (response.status === 201) {\n      return {\n        answer: response.data\n      };\n    } else {\n      return {\n        error: true,\n        message: \"Erro desconhecido.\"\n      };\n    }\n  } catch (error) {\n    return {\n      error: true,\n      message: error.message\n    };\n  }\n};","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/services/Answer.js"],"names":["axios","config","findAnswersByQuestionId","questionId","response","get","status","answers","data","error","message","createAnswer","answer","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,UAAP,IAAqB;AACxD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,gBAAeF,UAAW,EAArC,EAAwCF,MAAxC,CAAvB;;AACA,QAAGG,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApB,OAAP;AACH;;AACD,QAAGJ,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAP;AACH,KAFD,MAGI;AACA,aAAO;AAAEE,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;AACJ,GAXD,CAWE,OAAOD,KAAP,EAAc;AACZ,WAAO;AAAEA,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAED,KAAK,CAACC;AAA9B,KAAP;AACH;AACJ,CAfM;AAiBP,OAAO,MAAMC,YAAY,GAAI,MAAMC,MAAN,IAAiB;AAC1C,MAAI;AACA,UAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAN,CAAW,cAAX,EAA2BD,MAA3B,EAAmCX,MAAnC,CAAvB;;AACA,QAAGG,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAO;AAAEM,QAAAA,MAAM,EAAER,QAAQ,CAACI;AAAnB,OAAP;AACH,KAFD,MAGI;AACA,aAAO;AAAEC,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAP;AACH;AACJ,GARD,CAQE,OAAOD,KAAP,EAAc;AACZ,WAAO;AAAEA,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAED,KAAK,CAACC;AAA9B,KAAP;AACH;AACJ,CAZM","sourcesContent":["import axios from 'axios';\nimport config from './config';\n\nexport const findAnswersByQuestionId = async (questionId) =>{\n    try {\n        const response = await axios.get(`/answer/find/${questionId}`, config);\n        if(response.status === 200){\n            return { answers: response.data} ;\n        }\n        if(response.status === 204){\n            return { answers :[]};\n        }\n        else{\n            return { error: true, message: \"Erro desconhecido.\"}\n        }\n    } catch (error) {\n        return { error: true, message: error.message};\n    }\n};\n\nexport const createAnswer =  async(answer) => {\n    try {\n        const response = await axios.post('/answer/save', answer, config);\n        if(response.status === 201){\n            return { answer: response.data} ;\n        }\n        else{\n            return { error: true, message: \"Erro desconhecido.\"}\n        }\n    } catch (error) {\n        return { error: true, message: error.message};\n    }\n};"]},"metadata":{},"sourceType":"module"}