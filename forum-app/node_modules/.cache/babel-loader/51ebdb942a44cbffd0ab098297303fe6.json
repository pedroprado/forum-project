{"ast":null,"code":"var _jsxFileName = \"/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/components/QuestionsSummary/QuestionsSummary.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionSummaryItem from './QuestionSummaryItem';\nimport QuestionArea from './QuestionArea';\nimport './QuestionsSummary.css';\n\nconst questionsSummary = props => {\n  const questionSummaryItems = props.questionsSummaryList.map((questionSummary, index) => {\n    return /*#__PURE__*/React.createElement(QuestionSummaryItem, {\n      onQuestionSelected: props.onQuestionSelected,\n      question: questionSummary.text,\n      answers: questionSummary.answers,\n      id: questionSummary.id,\n      key: questionSummary.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"questionSummary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"Perguntas\"), questionSummaryItems, /*#__PURE__*/React.createElement(QuestionArea, {\n    newQuestion: props.newQuestion,\n    onNewQuestionChange: props.onNewQuestionChange,\n    onNewQuestionSubmit: props.onNewQuestionSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }));\n};\n\nquestionsSummary.propTypes = {\n  onQuestionSelected: PropTypes.func,\n  newQuestion: PropTypes.string,\n  onNewQuestionChange: PropTypes.func,\n  onNewQuestionSubmit: PropTypes.func,\n  questionsSummaryList: PropTypes.array\n};\nexport default questionsSummary;","map":{"version":3,"sources":["/home/pedrolocal/Desktop/Projects/ForumProject/forum-app/src/components/QuestionsSummary/QuestionsSummary.js"],"names":["React","PropTypes","QuestionSummaryItem","QuestionArea","questionsSummary","props","questionSummaryItems","questionsSummaryList","map","questionSummary","index","onQuestionSelected","text","answers","id","newQuestion","onNewQuestionChange","onNewQuestionSubmit","propTypes","func","string","array"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,wBAAP;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAMC,oBAAoB,GAAGD,KAAK,CAACE,oBAAN,CAA2BC,GAA3B,CAA+B,CAACC,eAAD,EAAkBC,KAAlB,KAA4B;AACpF,wBAAO,oBAAC,mBAAD;AACC,MAAA,kBAAkB,EAAIL,KAAK,CAACM,kBAD7B;AAEC,MAAA,QAAQ,EAAIF,eAAe,CAACG,IAF7B;AAGC,MAAA,OAAO,EAAIH,eAAe,CAACI,OAH5B;AAIC,MAAA,EAAE,EAAIJ,eAAe,CAACK,EAJvB;AAKC,MAAA,GAAG,EAAEL,eAAe,CAACK,EALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH,GAP4B,CAA7B;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEKR,oBAFL,eAGI,oBAAC,YAAD;AACI,IAAA,WAAW,EAAED,KAAK,CAACU,WADvB;AAEI,IAAA,mBAAmB,EAAEV,KAAK,CAACW,mBAF/B;AAGI,IAAA,mBAAmB,EAAEX,KAAK,CAACY,mBAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAUH,CApBD;;AAsBAb,gBAAgB,CAACc,SAAjB,GAA6B;AACzBP,EAAAA,kBAAkB,EAAEV,SAAS,CAACkB,IADL;AAEzBJ,EAAAA,WAAW,EAAEd,SAAS,CAACmB,MAFE;AAGzBJ,EAAAA,mBAAmB,EAAEf,SAAS,CAACkB,IAHN;AAIzBF,EAAAA,mBAAmB,EAAEhB,SAAS,CAACkB,IAJN;AAKzBZ,EAAAA,oBAAoB,EAAEN,SAAS,CAACoB;AALP,CAA7B;AAQA,eAAejB,gBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport QuestionSummaryItem from './QuestionSummaryItem';\nimport QuestionArea from './QuestionArea';\nimport './QuestionsSummary.css';\n\nconst questionsSummary = props => {\n    const questionSummaryItems = props.questionsSummaryList.map((questionSummary, index) => {\n        return <QuestionSummaryItem \n                onQuestionSelected = {props.onQuestionSelected}\n                question = {questionSummary.text}\n                answers = {questionSummary.answers}\n                id = {questionSummary.id}\n                key={questionSummary.id}/>;\n    });\n\n    return (\n        <div className=\"questionSummary\">\n            <p>Perguntas</p> \n            {questionSummaryItems}\n            <QuestionArea \n                newQuestion={props.newQuestion}\n                onNewQuestionChange={props.onNewQuestionChange}\n                onNewQuestionSubmit={props.onNewQuestionSubmit} />\n        </div>\n    );\n};\n\nquestionsSummary.propTypes = {\n    onQuestionSelected: PropTypes.func,\n    newQuestion: PropTypes.string,\n    onNewQuestionChange: PropTypes.func,\n    onNewQuestionSubmit: PropTypes.func,  \n    questionsSummaryList: PropTypes.array\n};\n\nexport default questionsSummary;"]},"metadata":{},"sourceType":"module"}